buildscript {
    ext {
        springBootVersion = '2.2.13.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

allprojects {
    group = 'io.joyoungc'
    version = '0.0.1-SNAPSHOT'
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        dependencies {
            dependency 'org.modelmapper:modelmapper:3.1.0'
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        implementation 'org.apache.commons:commons-lang3:3.8.1'
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    test {
        useJUnitPlatform()

        systemProperty 'spring.profiles.active', System.getProperty('spring.profiles.active')

        testLogging {
            showStandardStreams = true // Print standard out and standard error to the console.
        }

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Test Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }

}

project(':server-api') {
    dependencies {
        implementation project(':server-common')
        implementation project(':server-data')
        implementation project(':server-config')
    }
}

project(':server-data') {
    dependencies {
        implementation project(':server-common')
    }
}

project(':server-batch') {
    dependencies {
        implementation project(':server-common')
        implementation project(':server-data')
    }
}